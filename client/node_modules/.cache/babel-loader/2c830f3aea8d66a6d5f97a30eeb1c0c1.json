{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gueva\\\\chattyElephant\\\\client\\\\src\\\\components\\\\ChatSession.js\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\nimport { format } from 'date-fns';\n\nconst ChatSession = props => {\n  const messages = props.messages;\n  return messages.map(message => {\n    const time = format(new Date(\"\".concat(message.updatedAt)), 'HH:mm');\n    return React.createElement(\"li\", {\n      className: \"message\",\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"user-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, message.senderId), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, message.text)), React.createElement(\"span\", {\n      className: \"message-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, time));\n  });\n};\n\nChatSession.propTypes = {\n  messages: Proptypes.arrayOf(Proptypes.object).isRequired\n};\nexport default ChatSession;","map":{"version":3,"sources":["C:/Users/gueva/chattyElephant/client/src/components/ChatSession.js"],"names":["React","Proptypes","format","ChatSession","props","messages","map","message","time","Date","updatedAt","id","senderId","text","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACI,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,QACnBC,QADmB,GACND,KADM,CACnBC,QADmB;AAE3B,SAAOA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;AAC7B,UAAMC,IAAI,GAAGN,MAAM,CAAC,IAAIO,IAAJ,WAAYF,OAAO,CAACG,SAApB,EAAD,EAAmC,OAAnC,CAAnB;AAEA,WACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAEH,OAAO,CAACI,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,OAAO,CAACK,QAAnC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,OAAO,CAACM,IAAf,CAFF,CADF,EAKE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCL,IAAhC,CALF,CADF;AASD,GAZM,CAAP;AAaD,CAfD;;AAiBAL,WAAW,CAACW,SAAZ,GAAwB;AACtBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,MAA5B,EAAoCC;AADxB,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import React from 'react';\r\n    import Proptypes from 'prop-types';\r\n    import { format } from 'date-fns';\r\n\r\n    const ChatSession = props => {\r\n      const { messages } = props;\r\n      return messages.map(message => {\r\n        const time = format(new Date(`${message.updatedAt}`), 'HH:mm');\r\n\r\n        return (\r\n          <li className=\"message\" key={message.id}>\r\n            <div>\r\n              <span className=\"user-id\">{message.senderId}</span>\r\n              <span>{message.text}</span>\r\n            </div>\r\n            <span className=\"message-time\">{time}</span>\r\n          </li>\r\n        );\r\n      });\r\n    };\r\n\r\n    ChatSession.propTypes = {\r\n      messages: Proptypes.arrayOf(Proptypes.object).isRequired,\r\n    };\r\n\r\n    export default ChatSession;"]},"metadata":{},"sourceType":"module"}